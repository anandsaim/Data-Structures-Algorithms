//HEAP SORT

#include<stdio.h>
#define LeftChild( i )  ( 2 * ( i ) + 1 )
void PercDown( int A[ ], int i, int N );
void Heapsort( int A[ ], int N );
void main()
	{
	int a[10],n,i;
	printf("\n\n\tEnter array size  :");
	scanf("%d",&n);
	printf("\n\n\tEnter array Elements  :");
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	Heapsort(a,n);
	}
void PercDown(int A[ ], int i, int N )
	{
	int Child;
	int Tmp;
	for( Tmp = A[ i ]; LeftChild( i ) < N; i = Child )
		{
		Child = LeftChild( i );
		if( Child != N - 1 && A[ Child + 1 ] > A[ Child ] )
		Child++;
		if( Tmp < A[ Child ] )
			A[ i ] = A[ Child ];
		else
			break;
		}
	A[ i ] =Tmp;
	}
void Heapsort(int A[ ], int N )
	{
	int i,p;
	for( i = N / 2; i >= 0; i-- )  /* BuildHeap */
		PercDown( A, i, N );
		printf("\n\n\tBUILDING HEAP\n ");
	for(i=0;i<N;i++)
		printf("%d\t",A[i]);
	for( i = N - 1; i > 0; i-- )
		{
		p=A[ 0 ];  /* DeleteMax */
		A[0]=A[i];
		A[i]=p;
		PercDown( A, 0, i );
		}
	printf("\n\nSorted Elements are\n");
	for(i=0;i<N;i++)
		printf("%d\t",A[i]);
	}
